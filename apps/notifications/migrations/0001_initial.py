# Generated by Django 4.2.17 on 2024-01-01 00:00:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('notification_type', models.CharField(choices=[('event_reminder', 'Event Reminder'), ('event_update', 'Event Update'), ('event_cancellation', 'Event Cancellation'), ('new_event_nearby', 'New Event Nearby'), ('friend_invite', 'Friend Invite'), ('friend_accepted', 'Friend Accepted'), ('event_invite', 'Event Invite'), ('event_rsvp', 'Event RSVP'), ('system_announcement', 'System Announcement'), ('account_verification', 'Account Verification'), ('password_reset', 'Password Reset'), ('security_alert', 'Security Alert')], help_text='Type of notification this template is for', max_length=50, verbose_name='notification type')),
                ('title_template', models.CharField(help_text='Template for notification title with placeholders', max_length=200, verbose_name='title template')),
                ('message_template', models.TextField(help_text='Template for notification message with placeholders', verbose_name='message template')),
                ('email_subject_template', models.CharField(blank=True, help_text='Template for email subject line', max_length=200, verbose_name='email subject template')),
                ('email_body_template', models.TextField(blank=True, help_text='Template for email body', verbose_name='email body template')),
                ('sms_template', models.CharField(blank=True, help_text='Template for SMS messages', max_length=160, verbose_name='sms template')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('event_reminder', 'Event Reminder'), ('event_update', 'Event Update'), ('event_cancellation', 'Event Cancellation'), ('new_event_nearby', 'New Event Nearby'), ('friend_invite', 'Friend Invite'), ('friend_accepted', 'Friend Accepted'), ('event_invite', 'Event Invite'), ('event_rsvp', 'Event RSVP'), ('system_announcement', 'System Announcement'), ('account_verification', 'Account Verification'), ('password_reset', 'Password Reset'), ('security_alert', 'Security Alert')], max_length=50, verbose_name='notification type')),
                ('in_app_enabled', models.BooleanField(default=True, verbose_name='in app enabled')),
                ('email_enabled', models.BooleanField(default=True, verbose_name='email enabled')),
                ('sms_enabled', models.BooleanField(default=False, verbose_name='sms enabled')),
                ('push_enabled', models.BooleanField(default=True, verbose_name='push enabled')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'unique_together': {('user', 'notification_type')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('event_reminder', 'Event Reminder'), ('event_update', 'Event Update'), ('event_cancellation', 'Event Cancellation'), ('new_event_nearby', 'New Event Nearby'), ('friend_invite', 'Friend Invite'), ('friend_accepted', 'Friend Accepted'), ('event_invite', 'Event Invite'), ('event_rsvp', 'Event RSVP'), ('system_announcement', 'System Announcement'), ('account_verification', 'Account Verification'), ('password_reset', 'Password Reset'), ('security_alert', 'Security Alert')], max_length=50, verbose_name='notification type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('message', models.TextField(verbose_name='message')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20, verbose_name='priority')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='status')),
                ('channels', models.JSONField(default=list, help_text='List of channels this notification was sent through', verbose_name='channels')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='scheduled at')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional data for the notification', verbose_name='metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='content type')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='recipient')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('in_app', 'In-App'), ('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=20, verbose_name='channel')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], max_length=20, verbose_name='status')),
                ('attempt_count', models.PositiveIntegerField(default=1, verbose_name='attempt count')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='sent at')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='notifications.notification', verbose_name='notification')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_8b8b8b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'created_at'], name='notificatio_recipie_9b9b9b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'status'], name='notificatio_notific_0c0c0c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at', 'status'], name='notificatio_schedule_1d1d1d_idx'),
        ),
    ]
