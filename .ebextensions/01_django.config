packages:
  dnf:
    libpq-devel: []

commands:
  00_setup_swap:
    command: |
      if [ ! -f /swapfile ]; then
        sudo fallocate -l 1G /swapfile 2>/dev/null || sudo dd if=/dev/zero of=/swapfile bs=1M count=1024
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        grep -q '^/swapfile ' /etc/fstab || echo '/swapfile swap swap defaults 0 0' | sudo tee -a /etc/fstab
      else
        swapon --show | grep -q '/swapfile' || sudo swapon /swapfile
      fi

option_settings:
  aws:elasticbeanstalk:application:environment:
    DJANGO_SETTINGS_MODULE: "happenin.settings"
    PYTHONPATH: "/var/app/current:$PYTHONPATH"
  aws:elasticbeanstalk:container:python:
    WSGIPath: "happenin.wsgi:application"

container_commands:
  01_migrate:
    command: "source /var/app/venv/staging-LQM1lest/bin/activate && python manage.py migrate --noinput"
    leader_only: true
  02_collectstatic:
    command: "source /var/app/venv/staging-LQM1lest/bin/activate && python manage.py collectstatic --noinput"
    leader_only: true
  03_createsu:
    command: |
      bash -lc "source /var/app/venv/staging-LQM1lest/bin/activate && python manage.py shell - <<'PY'
      from django.contrib.auth import get_user_model
      import os
      User = get_user_model()
      email = os.environ.get('DJANGO_SUPERUSER_EMAIL')
      password = os.environ.get('DJANGO_SUPERUSER_PASSWORD')
      username = os.environ.get('DJANGO_SUPERUSER_USERNAME', 'admin')
      if email and password:
          if not User.objects.filter(email=email).exists():
              User.objects.create_superuser(username=username, email=email, password=password)
      PY"
    leader_only: true
    ignoreErrors: true
